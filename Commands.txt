================================================================
CREATE VPC
================================================================


aws ec2 create-vpc --cidr-block 192.168.0.0/16 --query Vpc.VpcId --output text
vpc-0d6f0b21d41edc658

================================================================
CREATE SUBNET
================================================================

aws ec2 create-subnet --vpc-id vpc-0d6f0b21d41edc658 --cidr-block 192.168.0.0/25
{
    "Subnet": {
        "AvailabilityZone": "us-east-1f",
        "AvailabilityZoneId": "use1-az5",
================================================================
IMPORT MY KEY
================================================================
aws ec2 import-key-pair --key-name "abc" --public-key-material fileb://mka.pub
{
    "KeyFingerprint": "3c:5b:3a:8c:1a:9a:59:87:b6:d5:4b:03:80:55:ef:0f",
    "KeyName": "abc",
    "KeyPairId": "key-0a558c4e02392e7e0"
}


================================================================
CREATE SECURITY GROUP
================================================================

aws ec2 create-security-group --group-name MySecurityGroup --description "MKA-SecurityGroup"
{
    "GroupId": "sg-069df29b58561fa78"
}


================================================================
ADD RULE TO THE SECURITY GROUP
================================================================

aws ec2 authorize-security-group-ingress --group-id sg-069df29b58561fa78 --protocol tcp --port 2233  --cidr 0.0.0.0/0

================================================================
================================================================
aws ec2 create-vpc --cidr-block 10.0.0.0/16 --query Vpc.VpcId --output text

aws ec2 create-subnet --vpc-id vpc-2f09a348 --cidr-block 10.0.1.0/24


aws ec2 create-subnet --vpc-id vpc-2f09a348 --cidr-block 10.0.0.0/24



aws ec2 create-internet-gateway --query InternetGateway.InternetGatewayId --output text

aws ec2 attach-internet-gateway --vpc-id vpc-2f09a348 --internet-gateway-id igw-1ff7a07b

aws ec2 create-route-table --vpc-id vpc-2f09a348 --query RouteTable.RouteTableId --output text
aws ec2 create-route --route-table-id rtb-c1c8faa6 --destination-cidr-block 0.0.0.0/0 --gateway-id igw-1ff7a07b

aws ec2 describe-route-tables --route-table-id rtb-c1c8faa6

aws ec2 describe-route-tables --route-table-id rtb-c1c8faa6

aws ec2 describe-subnets --filters "Name=vpc-id,Values=vpc-2f09a348" --query "Subnets[*].{ID:SubnetId,CIDR:CidrBlock}"

aws ec2 associate-route-table  --subnet-id subnet-b46032ec --route-table-id rtb-c1c8faa6

aws ec2 modify-subnet-attribute --subnet-id subnet-b46032ec --map-public-ip-on-launch

aws ec2 create-key-pair --key-name MyKeyPair --query "KeyMaterial" --output text > MyKeyPair.pem

chmod 400 MyKeyPair.pem

aws ec2 create-security-group --group-name SSHAccess --description "Security group for SSH access" --vpc-id vpc-2f09a348

aws ec2 authorize-security-group-ingress --group-id sg-e1fb8c9a --protocol tcp --port 22 --cidr 0.0.0.0/0

aws ec2 describe-instances --instance-id i-0146854b7443af453 --query "Reservations[*].Instances[*].{State:State.Name,Address:PublicIpAddress}"

ssh -i "MyKeyPair.pem" ec2-user@52.87.168.235

Step 4: Clean up
After you've verified that you can connect to your instance, you can terminate it if you no longer need it. To do this, use the terminate-instances command. To delete the other resources you've created in this example, use the following commands in their listed order:

Delete your security group:

aws ec2 delete-security-group --group-id sg-e1fb8c9a
Delete your subnets:

aws ec2 delete-subnet --subnet-id subnet-b46032ec
aws ec2 delete-subnet --subnet-id subnet-a46032fc
Delete your custom route table:

aws ec2 delete-route-table --route-table-id rtb-c1c8faa6
Detach your internet gateway from your VPC:

aws ec2 detach-internet-gateway --internet-gateway-id igw-1ff7a07b --vpc-id vpc-2f09a348
Delete your internet gateway:

aws ec2 delete-internet-gateway --internet-gateway-id igw-1ff7a07b
Delete your VPC:

aws ec2 delete-vpc --vpc-id vpc-2f09a348






















